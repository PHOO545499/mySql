=>Database Trigger

=>Syntax

CREATE TRIGGER triggername
trigger_time trigger_event ON tablename FOR EACH ROW
BEGIN 
	-- statements
END

=>trigger_time
BEFORE 
AFTER

=>trigger_event
INSERT 
UPDATE 
DELETE

________________________________________

CREATE TABLE IF NOT EXISTS borrowers(
	id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	username VARCHAR(50),
	password VARCHAR(255),
	age INT,
	status INT DEFAULT "1"
);

DESC borrowers;

1. 18 - 45
2. < 18
3. > 45

INSERT INTO borrowers(username,password,age)
VALUES ('aung aung',MD5(SHA1('12345')),18),
('zaw zaw',MD5(SHA1('12345')),30);

SELECT * FROM borrowers;

-----------------------

=>IF Statement

IF condition1 THEN
	..... statements to execute
END IF;

IF condition1 THEN
	..... statements to execute
ELSE
	..... statements to execute
END IF;

IF condition1 THEN
	..... statements to execute
ELSEIF condition2 THEN
	..... statements to execute
ELSEIF condition3 THEN
	..... statements to execute
ELSE
	..... statements to execute
END IF;

-----------------------

=>BEFORE INSERT

CREATE TRIGGER 

________________________________________

=> AFTER INSERT 

CREATE TABLE IF NOT EXISTS borrowercreators(
	id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	borrower_id INT,
	created_at TIMESTAMP DEFAULT NOW(),
	created_by VARCHAR(50)
);

DESC borrowercreators;


DELIMITER //

CREATE TRIGGER borrowercreator_afc
AFTER INSERT
ON borrowers FOR EACH ROW
BEGIN
	DECLARE dbuser VARCHAR(50);
	SELECT USER() INTO dbuser;

	INSERT INTO borrowercreators(borrowe_id,created_by);
	VALUES(NEW.id,dbuser);
END;//

DELIMITER ;

INSERT INTO borrowers(username,password,age)
VALUES('yu yu',MDS(SHA1(12345)),23);

INSERT INTO borrowers(username,password,age)
VALUES('hlahla',MDS(SHA1(12345)),23);

SELECT * FROM borrowers;
SELECT * FROM borrowercreators;

INSERT INTO borrowers(username,password,age)
VALUES('mya mya',MDS(SHA1(12345)),50);

SELECT * FROM borrowers;
SELECT * FROM borrowercreators;

INSERT INTO borrowers(username,password)
VALUES('nawnaw',MDS(SHA1(12345)));

-----------------------

CREATE TABLE IF NOT EXISTS reminders(
	id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	borrower_id INT,
	message VARCHAR(255) NOT NULL
);

DESC remainders;

DELIMITER //


CREATE TRIGGER borroweragereminder_afc
AFTER INSERT
ON borrowers FOR EACH ROW
BEGIN
	IF NEW.age IS NULL THEN 
		INSERT INTO remainders(borrower_id,message)
		VALUES(NEW.id,CONCAT('Dear ',NEW.username, ', please update your age.'));
	END IF;
END;//

DELIMITER ;

SELECT * FROM borrowers;
SELECT * FROM borrowercreators;
SELECT * FROM remainders;


INSERT INTO borrowers(username,password)
VALUES('thura',MDS(SHA1(12345)));

SELECT * FROM borrowers;
SELECT * FROM borrowercreators;
SELECT * FROM remainders;


INSERT INTO borrowers(username,password)
VALUES('myomyo',MDS(SHA1(12345)));

SELECT * FROM borrowers;
SELECT * FROM borrowercreators;
SELECT * FROM remainders;

INSERT INTO borrowers(username,password)
VALUES('naungnaung',MDS(SHA1(12345)));

SELECT * FROM borrowers;
SELECT * FROM borrowercreators;
SELECT * FROM remainders;

________________________________________

=>BEFORE UPDATE

DELIMLTER |

CREATE  TRIGGER borrowerage_bfu
BEFORE UPDATE
ON borrowers FOR EACH ROW
BEGIN

	DECLARE errmessage VARCHAR(255);
	SET errmessage = CONCAT('The old age is ',OLD.age,'.Sorry, we cannot provide to change.');

	IF OLD.age IS NOT NULL THEN
		SINGLE SQLSTATE '45000' SET MESSAGE_TEXT = errmessage;
	ELSE 
		IF NEW.age < 18 THEN SET NEW.ststus = 2;
		ELSEIF NEW.age > 45 THEN SET NEW.status = 3;
		END IF;
	END; |


DELIMLTER ;

SELECT * FROM borrowers;
SELECT * FROM borrowercreators;
SELECT * FROM remainders;


*Error with message 450000
UPDATE borrowers SET age = 40 WHERE id = 1;

UPDATE borrowers SET age = 30 WHERE id = 15;
UPDATE borrowers SET age = 15 WHERE id = 17;
UPDATE borrowers SET age = 50 WHERE id = 14;

SELECT * FROM borrowers;
SELECT * FROM borrowercreators;
SELECT * FROM remainders;


________________________________________

=>AFTER UPDATE

DELIMLTER $$

CREATE TRIGGER borrowerreminder_afu
AFTER UPDATE
ON borrowers FOR EACH ROW
BEGIN
	DELETE FROM reminders WHERE borrower_id = NEW.ID;
END; $$

DELIMLTER ;

*Error with message 450000
UPDATE borrowers SET age = 40 WHERE id = 2;

UPDATE borrowers SET age = 30 WHERE id = 18;
UPDATE borrowers SET age = 15 WHERE id = 19;
UPDATE borrowers SET age = 50 WHERE id = 20;

SELECT * FROM borrowers;
SELECT * FROM borrowercreators;
SELECT * FROM remainders;

________________________________________

=>BEFORE DELETE

CREATE TABLE IF NOT EXISTS activities(
id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
borrower_id INT,
created_at TIMESTAMP DEFAULT NOW(),
created_by VARCHAR(50)
);

DESC activities;

DELIMITER $$

CREATE TRIGGER borroweracti_bfd
BEFORE DELETE
ON borrowers FOR EACH ROW
BEGIN 
 DECLARE dbuser VARCHAR(50);
 SELECT USER() INTO dbuser;

 INSERT INTO activities(borrower_id,created_by)
 VALUES(OLD.id,dbuser);

END;$$

DELIMITER ;

SELECT * FROM borrowers;
SELECT * FROM borrowercreators;
SELECT * FROM activities;

DELETE borrowers WHERE id=20;
SELECT * FROM borrowers;
SELECT * FROM borrowercreators;
SELECT * FROM activities;

DELETE borrowers WHERE id=18;
SELECT * FROM borrowers;
SELECT * FROM borrowercreators;
SELECT * FROM activities;

DELETE borrowers WHERE id=1;
SELECT * FROM borrowers;
SELECT * FROM borrowercreators;
SELECT * FROM activities;


________________________________________


=>AFTER DELETE 

DELIMITER //

CREATE TRIGGER borroweracti_afd
AFTER DELETE
ON borrowers FOR EACH ROW
BEGIN
	DELETE FROM borrowercreators WHERE borrower_id = OLD.id;
END;//

DELIMITER ;

SELECT * FROM borrowers;
SELECT * FROM borrowercreators;
SELECT * FROM activities;


DELETE FROM borrowers WHERE id = 19;
DELETE FROM borrowers WHERE id = 15;
DELETE FROM borrowers WHERE id = 16;
DELETE FROM borrowers WHERE id = 17;
SELECT * FROM borrowers;
SELECT * FROM borrowercreators;
SELECT * FROM activities;
